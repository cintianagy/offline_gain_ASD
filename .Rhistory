names_to = c("Block"),
values_to = "SL_score"
)
study2_SL_long_offline_block <- study2_SL_long_offline_block %>%
mutate(Block = gsub('_offline', "", Block)) %>%
mutate(Block = gsub('block', "", Block))
study2_SL_long_offline_block$Group[study2_SL_long_offline_block$Group == 0] <- "NTP"
study2_SL_long_offline_block$Group[study2_SL_long_offline_block$Group == 1] <- "ASD"
study2_SL_long_offline_block <- study2_SL_long_offline_block %>%
group_by(Block, Group) %>%
summarise(rt = mean(SL_score, na.rm = T), se = std.error(SL_score, na.rm = T)) %>%
ungroup()
# make long dataset
study2_SL_long_online_block <- study2_SL %>%
select(c('Group', 'Subject', 'block2_online','block3_online', 'block4_online','block5_online', 'block6_online','block7_online', 'block8_online','block9_online', 'block10_online',
'block11_online', 'block12_online','block13_online', 'block14_online','block15_online', 'block16_online', 'block17_online','block18_online', 'block19_online','block20_online'))
blocks <- c('block2','block3', 'block4','block5', 'block6','block7', 'block8','block9', 'block10',
'block11', 'block12','block13', 'block14','block15', 'block16', 'block17','block18',
'block19','block20')
study2_SL_long_online_block <- pivot_longer(
data = study2_SL_long_online_block,
cols = starts_with(blocks),
names_to = c("Block"),
values_to = "SL_score"
)
study2_SL_long_online_block <- study2_SL_long_online_block %>%
mutate(Block = gsub('_online', "", Block)) %>%
mutate(Block = gsub('block', "", Block))
study2_SL_long_online_block$Group[study2_SL_long_online_block$Group == 0] <- "NTP"
study2_SL_long_online_block$Group[study2_SL_long_online_block$Group == 1] <- "ASD"
study2_SL_long_online_block <- study2_SL_long_online_block %>%
group_by(Block, Group) %>%
summarise(rt = mean(SL_score, na.rm = T), se = std.error(SL_score, na.rm = T)) %>%
ungroup()
# make long dataset
study2_VP_long_offline_block <- study2_VP %>%
select(c('Group', 'Subject', 'block2_offline','block3_offline', 'block4_offline','block5_offline', 'block6_offline','block7_offline', 'block8_offline','block9_offline', 'block10_offline',
'block11_offline', 'block12_offline','block13_offline', 'block14_offline','block15_offline', 'block16_offline', 'block17_offline','block18_offline', 'block19_offline','block20_offline'))
blocks <- c('block2','block3', 'block4','block5', 'block6','block7', 'block8','block9', 'block10',
'block11', 'block12','block13', 'block14','block15', 'block16', 'block17','block18',
'block19','block20')
study2_VP_long_offline_block <- pivot_longer(
data = study2_VP_long_offline_block,
cols = starts_with(blocks),
names_to = c("Block"),
values_to = "VP_score"
)
study2_VP_long_offline_block <- study2_VP_long_offline_block %>%
mutate(Block = gsub('_offline', "", Block)) %>%
mutate(Block = gsub('block', "", Block))
study2_VP_long_offline_block$Group[study2_VP_long_offline_block$Group == 0] <- "NTP"
study2_VP_long_offline_block$Group[study2_VP_long_offline_block$Group == 1] <- "ASD"
study2_VP_long_offline_block <- study2_VP_long_offline_block %>%
group_by(Block, Group) %>%
summarise(rt = mean(VP_score, na.rm = T), se = std.error(VP_score, na.rm = T)) %>%
ungroup()
# make long dataset
study2_VP_long_online_block <- study2_VP %>%
select(c('Group', 'Subject', 'block2_online','block3_online', 'block4_online','block5_online', 'block6_online','block7_online', 'block8_online','block9_online', 'block10_online',
'block11_online', 'block12_online','block13_online', 'block14_online','block15_online', 'block16_online', 'block17_online','block18_online', 'block19_online','block20_online'))
blocks <- c('block2','block3', 'block4','block5', 'block6','block7', 'block8','block9', 'block10',
'block11', 'block12','block13', 'block14','block15', 'block16', 'block17','block18',
'block19','block20')
study2_VP_long_online_block <- pivot_longer(
data = study2_VP_long_online_block,
cols = starts_with(blocks),
names_to = c("Block"),
values_to = "VP_score"
)
study2_VP_long_online_block <- study2_VP_long_online_block %>%
mutate(Block = gsub('_online', "", Block)) %>%
mutate(Block = gsub('block', "", Block))
study2_VP_long_online_block$Group[study2_VP_long_online_block$Group == 0] <- "NTP"
study2_VP_long_online_block$Group[study2_VP_long_online_block$Group == 1] <- "ASD"
study2_VP_long_online_block <- study2_VP_long_online_block %>%
group_by(Block, Group) %>%
summarise(rt = mean(VP_score, na.rm = T), se = std.error(VP_score, na.rm = T)) %>%
ungroup()
ggplot(study1_general, aes(x = AQ_total)) +
geom_histogram(binwidth = 1, colour="black", fill = "#22A884") +
geom_vline(aes(xintercept = 26),
color="#3b3b3b", size = .5) +
xlab("total AQ score") +
ylab("Number of participants") +
theme_classic()
#ggsave("study1_AQ_distribution.png")
ggplot(study1_general, aes(x = AQ_total, fill = factor(Group, levels = c("lower AQ", "higher AQ")))) +
geom_histogram(binwidth = 1, position = "dodge", colour="black") +
geom_vline(aes(xintercept = 17),
color="#3b3b3b", size = .5) +
scale_fill_manual(values = c("#440154", "#fde725")) +
xlab("total AQ score") +
ylab("Number of participants") +
labs(fill = "Group") +
theme_classic()
#ggsave("sm_study1_AQ_distribution.png")
"%||%" <- function(a, b) {
if (!is.null(a)) a else b
}
geom_flat_violin <- function(mapping = NULL, data = NULL, stat = "ydensity",
position = "dodge", trim = TRUE, scale = "area",
show.legend = NA, inherit.aes = TRUE, ...) {
layer(
data = data,
mapping = mapping,
stat = stat,
geom = GeomFlatViolin,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(
trim = trim,
scale = scale,
...
)
)
}
#' @rdname ggplot2-ggproto
#' @format NULL
#' @usage NULL
#' @export
GeomFlatViolin <-
ggproto("GeomFlatViolin", Geom,
setup_data = function(data, params) {
data$width <- data$width %||%
params$width %||% (resolution(data$x, FALSE) * 0.9)
# ymin, ymax, xmin, and xmax define the bounding rectangle for each group
data %>%
group_by(group) %>%
mutate(
ymin = -80,
ymax = 80,
xmin = x,
xmax = x + width / 2
)
},
draw_group = function(data, panel_scales, coord) {
# Find the points for the line to go all the way around
data <- transform(data,
xminv = x,
xmaxv = x + violinwidth * (xmax - x)
)
# Make sure it's sorted properly to draw the ouSLine
newdata <- rbind(
plyr::arrange(transform(data, x = xminv), y),
plyr::arrange(transform(data, x = xmaxv), -y)
)
# Close the polygon: set first and last point the same
# Needed for coord_polar and such
newdata <- rbind(newdata, newdata[1, ])
ggplot2:::ggname("geom_flat_violin", GeomPolygon$draw_panel(newdata, panel_scales, coord))
},
draw_key = draw_key_polygon,
default_aes = aes(
weight = 1, colour = "grey20", fill = "white", size = 0.5,
alpha = NA, linetype = "solid"
),
required_aes = c("x", "y")
)
jitter_nudge <- position_jitternudge(width = .05, height = 2,
seed = 123, x = -.1)
ggplot(study1_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score), show.legend = FALSE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = AQ_total), position = position_jitter(width = .05), size = 1.5, shape = 20, show.legend = TRUE) +
geom_boxplot(aes(fill = AQ_total), outlier.shape = NA, alpha = .5, width = .1, colour = "black", show.legend = FALSE) +
scale_colour_viridis_c() +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(colour = "Total AQ score")
ggplot(study1_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score), show.legend = FALSE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = AQ_total), position = position_jitter(width = .05), size = 1.5, shape = 20, show.legend = TRUE) +
geom_boxplot(aes(fill = AQ_total), outlier.shape = NA, alpha = .5, width = .1, colour = "black", show.legend = FALSE) +
scale_colour_viridis_c() +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(colour = "Total AQ score")
ggplot(study1_SL_VP_long_online, aes(x = Learning_type, y = Learning_score), show.legend = FALSE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = AQ_total), position = position_jitter(width = .05), size = 1.5, shape = 20, show.legend = TRUE) +
geom_boxplot(aes(fill = AQ_total), outlier.shape = NA, alpha = .5, width = .1, colour = "black", show.legend = FALSE) +
scale_colour_viridis_c() +
xlab("Measurement type") +
ylab("Mean online change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(colour = "Total AQ score")
#ggsave("raincloud_study1_SL_VP_AQ_online.png")
# merge datasets
study1_SL_VP_long_offline <- merge(study1_SL_long_offline, study1_VP_long_offline, by = c("Group", "AQ_total", "Subject", "Learning_phase"))
learning_type <- c("SL_score", "VP_score")
study1_SL_VP_long_offline <- pivot_longer(
data = study1_SL_VP_long_offline,
cols = learning_type,
names_to = c("Learning_type"),
values_to = "Learning_score")
study1_SL_VP_long_offline$Learning_type[study1_SL_VP_long_offline$Learning_type == "SL_score"] <- 1
study1_SL_VP_long_offline$Learning_type[study1_SL_VP_long_offline$Learning_type == "VP_score"] <- 2
ggplot(study1_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score), show.legend = FALSE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = AQ_total), position = position_jitter(width = .05), size = 1.5, shape = 20, show.legend = TRUE) +
geom_boxplot(aes(fill = AQ_total), outlier.shape = NA, alpha = .5, width = .1, colour = "black", show.legend = FALSE) +
scale_colour_viridis_c() +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(colour = "Total AQ score")
ggplot(study1_SL_VP_long_online, aes(x = Learning_type, y = Learning_score), show.legend = FALSE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = AQ_total), position = position_jitter(width = .05), size = 1.5, shape = 20, show.legend = TRUE) +
geom_boxplot(aes(fill = AQ_total), outlier.shape = NA, alpha = .5, width = .1, colour = "black", show.legend = FALSE) +
scale_colour_viridis_c() +
xlab("Measurement type") +
ylab("Mean online change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(colour = "Total AQ score")
ggsave("raincloud_study1_SL_VP_AQ_online.png")
ggplot(study2_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))), show.legend = FALSE) +
geom_flat_violin(aes(fill = factor(Group, levels = c("NTP", "ASD"))), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .8, colour = NA, show.legend = TRUE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = factor(Group, levels = c("NTP", "ASD"))), position = position_jitter(width = .05), size = 1, shape = 20, show.legend = FALSE) +
geom_boxplot(aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))),outlier.shape = NA, alpha = .8, width = .1, colour = "black", show.legend = FALSE) +
scale_color_manual(values = c("#440154", "#fde725")) +
scale_fill_manual(values = c("#440154", "#fde725")) +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(fill = "Group")
ggplot(study2_SL_VP_long_online, aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))), show.legend = FALSE) +
geom_flat_violin(aes(fill = factor(Group, levels = c("NTP", "ASD"))), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .8, colour = NA, show.legend = TRUE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = factor(Group, levels = c("NTP", "ASD"))), position = position_jitter(width = .05), size = 1, shape = 20, show.legend = FALSE) +
geom_boxplot(aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))),outlier.shape = NA, alpha = .8, width = .1, colour = "black", show.legend = FALSE) +
scale_color_manual(values = c("#440154", "#fde725")) +
scale_fill_manual(values = c("#440154", "#fde725")) +
xlab("Measurement type") +
ylab("Mean online change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(fill = "Group")
ggsave("raincloud_study2_SL_VP_online.png")
# make long dataset
study1_VP_long_offline <- study1_VP %>%
select(c('Group', 'AQ_total', 'Subject', 'offline_VP'))
learning_phase <- c('offline_VP')
study1_VP_long_offline <- pivot_longer(
data = study1_VP_long_offline,
cols = learning_phase,
names_to = c("Learning_phase"),
values_to = "VP_score"
)
study1_VP_long_offline$Learning_phase[study1_VP_long_offline$Learning_phase == "offline_VP"] <- "1"
study1_VP_long_offline$Group[study1_VP_long_offline$Group == 0] <- "lower AQ"
study1_VP_long_offline$Group[study1_VP_long_offline$Group == 1] <- "higher AQ"
# merge datasets
study1_SL_VP_long_offline <- merge(study1_SL_long_offline, study1_VP_long_offline, by = c("Group", "AQ_total", "Subject", "Learning_phase"))
learning_type <- c("SL_score", "VP_score")
study1_SL_VP_long_offline <- pivot_longer(
data = study1_SL_VP_long_offline,
cols = learning_type,
names_to = c("Learning_type"),
values_to = "Learning_score")
study1_SL_VP_long_offline$Learning_type[study1_SL_VP_long_offline$Learning_type == "SL_score"] <- 1
study1_SL_VP_long_offline$Learning_type[study1_SL_VP_long_offline$Learning_type == "VP_score"] <- 2
ggplot(study1_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score), show.legend = FALSE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = AQ_total), position = position_jitter(width = .05), size = 1.5, shape = 20, show.legend = TRUE) +
geom_boxplot(aes(fill = AQ_total), outlier.shape = NA, alpha = .5, width = .1, colour = "black", show.legend = FALSE) +
scale_colour_viridis_c() +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(colour = "Total AQ score")
#ggsave("raincloud_study1_SL_VP_AQ_offline.png")
ggplot(study2_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))), show.legend = FALSE) +
geom_flat_violin(aes(fill = factor(Group, levels = c("NTP", "ASD"))), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .8, colour = NA, show.legend = TRUE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = factor(Group, levels = c("NTP", "ASD"))), position = position_jitter(width = .05), size = 1, shape = 20, show.legend = FALSE) +
geom_boxplot(aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))),outlier.shape = NA, alpha = .8, width = .1, colour = "black", show.legend = FALSE) +
scale_color_manual(values = c("#440154", "#fde725")) +
scale_fill_manual(values = c("#440154", "#fde725")) +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(fill = "Group")
# make long dataset
study2_VP_long_offline <- study2_VP %>%
select(c('Group', 'Subject', 'offline_VP'))
learning_phase <- c('offline_VP')
study2_VP_long_offline <- pivot_longer(
data = study2_VP_long_offline,
cols = learning_phase,
names_to = c("Learning_phase"),
values_to = "VP_score"
)
study2_VP_long_offline$Learning_phase[study2_VP_long_offline$Learning_phase == "offline_VP"] <- "1"
study2_VP_long_offline$Group[study2_VP_long_offline$Group == 0] <- "NTP"
study2_VP_long_offline$Group[study2_VP_long_offline$Group == 1] <- "ASD"
# merge datasets
study2_SL_VP_long_offline <- merge(study2_SL_long_offline, study2_VP_long_offline, by = c("Group", "Subject", "Learning_phase"))
learning_type <- c("SL_score", "VP_score")
study2_SL_VP_long_offline <- pivot_longer(
data = study2_SL_VP_long_offline,
cols = learning_type,
names_to = c("Learning_type"),
values_to = "Learning_score")
study2_SL_VP_long_offline$Learning_type[study2_SL_VP_long_offline$Learning_type == "SL_score"] <- 1
study2_SL_VP_long_offline$Learning_type[study2_SL_VP_long_offline$Learning_type == "VP_score"] <- 2
ggplot(study2_SL_VP_long_offline, aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))), show.legend = FALSE) +
geom_flat_violin(aes(fill = factor(Group, levels = c("NTP", "ASD"))), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .8, colour = NA, show.legend = TRUE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = factor(Group, levels = c("NTP", "ASD"))), position = position_jitter(width = .05), size = 1, shape = 20, show.legend = FALSE) +
geom_boxplot(aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))),outlier.shape = NA, alpha = .8, width = .1, colour = "black", show.legend = FALSE) +
scale_color_manual(values = c("#440154", "#fde725")) +
scale_fill_manual(values = c("#440154", "#fde725")) +
xlab("Measurement type") +
ylab("Mean offline change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(fill = "Group")
#ggsave("raincloud_study2_SL_VP_offline.png")
ggplot(study2_SL_VP_long_online, aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))), show.legend = FALSE) +
geom_flat_violin(aes(fill = factor(Group, levels = c("NTP", "ASD"))), position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .8, colour = NA, show.legend = TRUE) +
geom_point(aes(x = as.numeric(Learning_type) - .15, colour = factor(Group, levels = c("NTP", "ASD"))), position = position_jitter(width = .05), size = 1, shape = 20, show.legend = FALSE) +
geom_boxplot(aes(x = Learning_type, y = Learning_score, fill = factor(Group, levels = c("NTP", "ASD"))),outlier.shape = NA, alpha = .8, width = .1, colour = "black", show.legend = FALSE) +
scale_color_manual(values = c("#440154", "#fde725")) +
scale_fill_manual(values = c("#440154", "#fde725")) +
xlab("Measurement type") +
ylab("Mean online change score (ms)") +
scale_x_discrete(labels = c("Statistical learning", "Visuomotor performance")) +
theme_classic() +
labs(fill = "Group")
ggsave("raincloud_study2_SL_VP_online.png")
ggplot(study1_SL_long_offline_block, aes(x = as.numeric(Block), y = rt, colour = factor(Group, levels = c("lower AQ", "higher AQ")))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), width = 0.05, size = 0.2) +
scale_color_manual(values = c("#440154", "#fde725")) +
labs(x = "Block", y = "Statistical learning score (ms)", colour = "Group") +
theme_classic()
ggplot(study1_SL_long_online_block, aes(x = as.numeric(Block), y = rt, colour = factor(Group, levels = c("lower AQ", "higher AQ")))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), width = 0.05, size = 0.2) +
scale_color_manual(values = c("#440154", "#fde725")) +
labs(x = "Block", y = "Statistical learning score (ms)", colour = "Group") +
theme_classic()
ggplot(study1_VP_long_offline_block, aes(x = as.numeric(Block), y = rt, colour = factor(Group, levels = c("lower AQ", "higher AQ")))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), width = 0.05, size = 0.2) +
scale_color_manual(values = c("#440154", "#fde725")) +
labs(x = "Block", y = "Visuomotor performance change (ms)", colour = "Group") +
theme_classic()
# make long dataset
study1_SL_long_offline_block <- study1_SL %>%
select(c('Group', 'AQ_total', 'Subject', 'block2_offline','block3_offline', 'block4_offline','block5_offline', 'block6_offline','block7_offline', 'block8_offline','block9_offline', 'block10_offline',
'block11_offline', 'block12_offline','block13_offline', 'block14_offline','block15_offline', 'block16_offline', 'block17_offline','block18_offline', 'block19_offline','block20_offline', 'block21_offline', 'block22_offline','block23_offline', 'block24_offline','block25_offline'))
blocks <- c('block2','block3', 'block4','block5', 'block6','block7', 'block8','block9', 'block10',
'block11', 'block12','block13', 'block14','block15', 'block16', 'block17','block18',
'block19','block20', 'block21', 'block22','block23', 'block24','block25')
study1_SL_long_offline_block <- pivot_longer(
data = study1_SL_long_offline_block,
cols = starts_with(blocks),
names_to = c("Block"),
values_to = "SL_score"
)
study1_SL_long_offline_block <- study1_SL_long_offline_block %>%
mutate(Block = gsub('_offline', "", Block)) %>%
mutate(Block = gsub('block', "", Block))
study1_SL_long_offline_block$Group[study1_SL_long_offline_block$Group == 0] <- "lower AQ"
study1_SL_long_offline_block$Group[study1_SL_long_offline_block$Group == 1] <- "higher AQ"
study1_SL_long_offline_block <- study1_SL_long_offline_block %>%
group_by(Block, Group) %>%
summarise(rt = mean(SL_score, na.rm = T), se = std.error(SL_score, na.rm = T)) %>%
ungroup()
# make long dataset
study1_SL_long_online_block <- study1_SL %>%
select(c('Group', 'AQ_total', 'Subject', 'block2_online','block3_online', 'block4_online','block5_online', 'block6_online','block7_online', 'block8_online','block9_online', 'block10_online',
'block11_online', 'block12_online','block13_online', 'block14_online','block15_online', 'block16_online', 'block17_online','block18_online', 'block19_online','block20_online', 'block21_online', 'block22_online','block23_online', 'block24_online','block25_online'))
blocks <- c('block2','block3', 'block4','block5', 'block6','block7', 'block8','block9', 'block10',
'block11', 'block12','block13', 'block14','block15', 'block16', 'block17','block18',
'block19','block20', 'block21', 'block22','block23', 'block24','block25')
study1_SL_long_online_block <- pivot_longer(
data = study1_SL_long_online_block,
cols = starts_with(blocks),
names_to = c("Block"),
values_to = "SL_score"
)
study1_SL_long_online_block <- study1_SL_long_online_block %>%
mutate(Block = gsub('_online', "", Block)) %>%
mutate(Block = gsub('block', "", Block))
study1_SL_long_online_block$Group[study1_SL_long_online_block$Group == 0] <- "lower AQ"
study1_SL_long_online_block$Group[study1_SL_long_online_block$Group == 1] <- "higher AQ"
study1_SL_long_online_block <- study1_SL_long_online_block %>%
group_by(Block, Group) %>%
summarise(rt = mean(SL_score, na.rm = T), se = std.error(SL_score, na.rm = T)) %>%
ungroup()
ggplot(study1_SL_long_offline_block, aes(x = as.numeric(Block), y = rt, colour = factor(Group, levels = c("lower AQ", "higher AQ")))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), width = 0.05, size = 0.2) +
scale_color_manual(values = c("#440154", "#fde725")) +
labs(x = "Block", y = "Statistical learning score (ms)", colour = "Group") +
theme_classic()
study1_micro_vs_grand_SL <- merge(study1_stat_learn, study1_SL, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_SL <- study1_micro_vs_grand_SL %>%
select("Group", "AQ_total", "Subject", "mean_SL", "offline_SL")
study1_micro_vs_grand_SL <- merge(study1_stat_learn, study1_SL, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_SL <- study1_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
study1_micro_vs_grand_SL <- merge(study1_stat_learn, study1_SL, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_SL <- study1_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
study1_micro_vs_grand_SL <- merge(study1_stat_learn, study1_SL, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_SL <- study1_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
study1_micro_vs_grand_SL <- merge(study1_stat_learn, study1_SL, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_SL <- study1_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
study2_micro_vs_grand_SL <- merge(study2_stat_learn, study2_SL, by = c("Group", "Subject"))
study2_micro_vs_grand_SL <- study2_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
library(tidyverse)
library(rstatix)
library(readr)
library(dplyr)
library(car)
library(tidyverse)
library(sjPlot)
library(lme4)
library(performance)
library(nortest)
library(lmeresampler)
study1_stat_learn <- read_csv("processed_data/study_1/data_study_1_statistical_learning.csv")
study1_visuomotor_perf  <- read_csv("processed_data/study_1/data_study_1_visuomotor_performance.csv")
study2_stat_learn  <- read_csv("processed_data/study_2/data_study_2_statistical_learning.csv")
study2_visuomotor_perf  <- read_csv("processed_data/study_2/data_study_2_visuomotor_performance.csv")
study1_SL <- read_csv("processed_data/study_1/data_study_1_SL_offline_online.csv")
study1_VP <- read_csv("processed_data/study_1/data_study_1_VP_offline_online.csv")
study2_SL <- read_csv("processed_data/study_2/data_study_2_SL_offline_online.csv")
study2_VP <- read_csv("processed_data/study_2/data_study_2_VP_offline_online.csv")
study1_micro_vs_grand_SL <- merge(study1_stat_learn, study1_SL, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_SL <- study1_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
study1_micro_vs_grand_VP <- merge(study1_visuomotor_perf, study1_VP, by = c("Group", "AQ_total", "Subject"))
study1_micro_vs_grand_VP <- study1_micro_vs_grand_VP %>%
select(c("Group", "AQ_total", "Subject", "mean_VP", "offline_VP"))
study2_micro_vs_grand_SL <- merge(study2_stat_learn, study2_SL, by = c("Group", "Subject"))
study2_micro_vs_grand_SL <- study2_micro_vs_grand_SL %>%
select(c("Group", "AQ_total", "Subject", "mean_SL", "offline_SL"))
study2_micro_vs_grand_SL <- merge(study2_stat_learn, study2_SL, by = c("Group", "Subject"))
study2_micro_vs_grand_SL <- study2_micro_vs_grand_SL %>%
select(c("Group", "Subject", "mean_SL", "offline_SL"))
study2_micro_vs_grand_VP <- merge(study2_visuomotor_perf, study2_VP, by = c("Group", "Subject"))
study2_micro_vs_grand_VP <- study2_micro_vs_grand_VP %>%
select(c("Group", "Subject", "mean_VP", "offline_VP"))
View(study1_micro_vs_grand_SL)
test <- cor.test(study1_micro_vs_grand_SL$mean_SL, study1_micro_vs_grand_SL$offline_SL)
test
cor.test(study1_micro_vs_grand_SL$mean_SL, study1_micro_vs_grand_SL$offline_SL)
cor.test(study1_micro_vs_grand_VP$mean_VP, study1_micro_vs_grand_VP$offline_VP)
cor.test(study1_micro_vs_grand_VP$mean_VP, (study1_micro_vs_grand_VP$offline_VP)*(-1))
cor.test(study2_micro_vs_grand_SL$mean_SL, study2_micro_vs_grand_SL$offline_SL)
cor.test(study2_micro_vs_grand_VP$mean_VP, (study2_micro_vs_grand_VP$offline_VP)*(-1))
cor.test(study1_micro_vs_grand_SL$mean_SL, study1_micro_vs_grand_SL$offline_SL)
cor.test(study1_micro_vs_grand_VP$mean_VP, (study1_micro_vs_grand_VP$offline_VP)*(-1))
rcorr(as.matrix(study1_micro_vs_grand_S[AQ_total, mean_SL, offline_SL]))
library(tidyverse)
library(rstatix)
library(readr)
library(dplyr)
library(car)
library(tidyverse)
library(sjPlot)
library(lme4)
library(performance)
library(nortest)
library(lmeresampler)
library(Hmisc)
rcorr(as.matrix(study1_micro_vs_grand_S[AQ_total, mean_SL, offline_SL]))
rcorr(as.matrix(study1_micro_vs_grand_SL[AQ_total, mean_SL, offline_SL]))
rcorr(as.matrix(study1_micro_vs_grand_SL[[AQ_total, mean_SL, offline_SL]]))
rcorr(as.matrix(select(study1_micro_vs_grand_SL, c('AQ_total', 'mean_SL', 'offline_SL')))
rcorr(as.matrix(select(study1_micro_vs_grand_SL, c('AQ_total', 'mean_SL', 'offline_SL'))))
rcorr(as.matrix(select(study1_micro_vs_grand_VP, c('AQ_total', 'mean_VP', 'offline_VP'))))
study1_micro_vs_grand_SL_lowerAQ <- study1_micro_vs_grand_SL %>%
filter(Group == 0)
cor.test(study1_micro_vs_grand_SL_lowerAQ$mean_SL, study1_micro_vs_grand_SL_lowerAQ$offline_SL)
study1_micro_vs_grand_SL_higherAQ <- study1_micro_vs_grand_SL %>%
filter(Group == 1)
cor.test(study1_micro_vs_grand_SL_higher$mean_SL, study1_micro_vs_grand_SL_higherAQ$offline_SL)
study1_micro_vs_grand_SL_higherAQ <- study1_micro_vs_grand_SL %>%
filter(Group == 1)
cor.test(study1_micro_vs_grand_SL_higherAQ$mean_SL, study1_micro_vs_grand_SL_higherAQ$offline_SL)
study1_micro_vs_grand_VP_lowerAQ <- study1_micro_vs_grand_VP %>%
filter(Group == 0)
cor.test(study1_micro_vs_grand_VP_lowerAQ$mean_VP, study1_micro_vs_grand_VP_lowerAQ$offline_VP)
study1_micro_vs_grand_VP_lowerAQ <- study1_micro_vs_grand_VP %>%
filter(Group == 1)
cor.test(study1_micro_vs_grand_VP_lowerAQ$mean_VP, study1_micro_vs_grand_VP_lowerAQ$offline_VP)
study1_micro_vs_grand_VP_NTP <- study1_micro_vs_grand_VP %>%
filter(Group == 0)
cor.test(study1_micro_vs_grand_VP_NTP$mean_VP, study1_micro_vs_grand_VP_NTP$offline_VP)
study1_micro_vs_grand_VP_NTP <- study1_micro_vs_grand_VP %>%
filter(Group == 1)
cor.test(study1_micro_vs_grand_VP_NTP$mean_VP, study1_micro_vs_grand_VP_NTP$offline_VP)
study2_micro_vs_grand_SL_NTP <- study2_micro_vs_grand_SL %>%
filter(Group == 0)
cor.test(study2_micro_vs_grand_SL_NTP$mean_SL, study2_micro_vs_grand_SL_NTP$offline_SL)
study2_micro_vs_grand_SL_ASD <- study2_micro_vs_grand_SL %>%
filter(Group == 1)
cor.test(study2_micro_vs_grand_SL_ASD$mean_SL, study2_micro_vs_grand_SL_ASD$offline_SL)
